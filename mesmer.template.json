{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "customerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the customer this instance is being deployed for."
      }
    },
    "linuxFxVersion" : {
      "type": "string",
      "defaultValue" : "NODE|12-lts",
      "metadata": {
        "description": "The Runtime stack of current web app"
      }
    },
    "administratorUsername": {
      "type": "string"
    },
    "administratorPassword": {
      "type": "securestring"
    },
    "mesmerWelknown": {
      "type": "string",
      "metadata": {
        "description": "(Mesmer Login) The welknown endpoint of the AD Mesmer will authenticate against."
      }
    },
    "mesmerAudience": {
      "type": "string",
      "metadata": {
        "description": "(Mesmer Login) The audience of the AD App Mesmer will authenticate against."
      }
    },
    "tsClientId": {
      "type": "string",
      "metadata": {
        "description": "(TS Login) The client ID of the talksuite instance you want to connect to."
      }
    },
    "tsTenantId": {
      "type": "string",
      "metadata": {
        "description": "(TS Login) The tenant ID of the talksuite instance you want to connect to."
      }
    },
    "tsBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "(TS Login) The base URL of the talksuite instance you want to connect to."
      }
    },
    "dbSkuCapacity": {
      "defaultValue": 1,
      "type": "int"
    },
    "dbSkuFamily": {
      "defaultValue": "Gen5",
      "type": "string"
    },
    "dbSkuName": {
      "defaultValue": "B_Gen5_1",
      "type": "string"
    },
    "dbSkuSizeMB": {
      "defaultValue": 51200,
      "type": "int"
    },
    "dbSkuTier": {
      "defaultValue": "Basic",
      "type": "string"
    },
    "dbVersion": {
      "defaultValue": "10",
      "type": "string"
    },
    "dbBackupRetentionDays": {
      "defaultValue": 7,
      "type": "int"
    },
    "dbGeoRedundantBackup": {
      "type": "string",
      "defaultValue": "Disabled"
    },
    "dbStorageAutoGrow": {
      "type": "string",
      "defaultValue": "Disabled"
    }
  },
  "variables": {
    "webAppName": "[concat(parameters('customerName'), '-mesmer-web-app')]",
    "apiAppName": "[concat(parameters('customerName'), '-mesmer-api-app')]",
    "insightsName": "[concat(parameters('customerName'), '-mesmer-insights')]",
    "appServicePlanName": "[concat(parameters('customerName'), '-mesmer-service-plan')]",
    "databaseName": "[concat(parameters('customerName'), '-mesmer-db')]",
    "serverName": "[concat(parameters('customerName'), '-mesmer-postgres')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "Tier": "Standard",
        "Name": "S1"
      },
      "kind": "linux",
      "properties":{
        "reserved":true
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('insightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "properties": {
        "ApplicationId": "[variables('insightsName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('webAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
            "linuxFxVersion": "[parameters('linuxFxVersion')]"
          }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('apiAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('insightsName'))]",
        "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
            "linuxFxVersion": "[parameters('linuxFxVersion')]"
          }
      },
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]"
          ],
          "tags": {
            "displayName": "appsettings"
          },
          "properties": {
            "PGUSER": "[concat(parameters('administratorUsername'), '@', variables('serverName'), '.postgres.database.azure.com')]",
            "PGHOST": "[concat(variables('serverName'), '.postgres.database.azure.com')]",
            "PGPASSWORD": "[parameters('administratorPassword')]",
            "PGDATABASE": "[variables('databaseName')]",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('insightsName'))).InstrumentationKey]",
            "OPENID_CONFIG_URL": "[parameters('mesmerWelknown')]",
            "OPENID_AUDIENCE": "[parameters('mesmerAudience')]",
            "TS_CLIENT_ID": "[parameters('tsClientId')]",
            "TS_TENANT_ID": "[parameters('tsTenantId')]",
            "TS_BASEURL": "[parameters('tsBaseUrl')]"
          }
        }
      ]
    },
    {
      "apiVersion": "2017-12-01",
      "kind": "",
      "location": "[resourceGroup().location]",
      "name": "[variables('serverName')]",
      "properties": {
        "version": "[parameters('dbVersion')]",
        "administratorLogin": "[parameters('administratorUsername')]",
        "administratorLoginPassword": "[parameters('administratorPassword')]",
        "storageProfile": {
          "storageMB": "[parameters('dbSkuSizeMB')]",
          "backupRetentionDays": "[parameters('dbBackupRetentionDays')]",
          "geoRedundantBackup": "[parameters('dbGeoRedundantBackup')]",
          "storageAutoGrow": "[parameters('dbStorageAutoGrow')]"
        }
      },
      "sku": {
        "name": "[parameters('dbSkuName')]",
        "tier": "[parameters('dbSkuTier')]",
        "capacity": "[parameters('dbSkuCapacity')]",
        "size": "[parameters('dbSkuSizeMB')]",
        "family": "[parameters('dbSkuFamily')]"
      },
      "type": "Microsoft.DBforPostgreSQL/servers",
      "resources": [
        {
          "type": "Microsoft.DBforPostgreSQL/servers/databases",
          "apiversion": "2017-12-01",
          "name": "[concat(variables('serverName'), '/', variables('databaseName'))]",
          "dependsOn": [
              "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
          ],
          "properties": {
              "charset": "UTF8",
              "collation": "en_GB.UTF8"
          }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(variables('serverName'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        }
      ]
    }
  ]
}